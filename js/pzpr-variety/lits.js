/*! @license pzpr.js v0.11.1 (c) 2009-2019 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */

!function(a,b){"object"==typeof module&&module.exports?module.exports=[a,b]:pzpr.classmgr.makeCustom(a,b)}(["lits","norinori"],{MouseEvent:{use:!0,mouseinput_auto:function(){this.puzzle.playmode?(this.mousestart||this.mousemove)&&this.inputcell():this.puzzle.editmode&&(this.mousestart||this.mousemove)&&this.inputborder()}},"MouseEvent@lits":{inputModes:{edit:["border","info-blk"],play:["shade","unshade","info-blk"]}},"MouseEvent@norinori":{inputModes:{edit:["border"],play:["shade","unshade"]},shadeCount:0,mousereset:function(){this.shadeCount=0,this.common.mousereset.call(this)},inputcell:function(){var a=this.getcell();a.isnull||a===this.mouseCell||(this.common.inputcell.call(this),1===this.inputData&&++this.shadeCount>=2&&this.mousereset())}},Cell:{posthook:{qans:function(a){this.room.checkAutoCmp()}}},"Cell@lits":{shape:null},Board:{hasborder:1},"Board@lits":{addExtraInfo:function(){this.tetrograph=this.addInfoList(this.klass.AreaTetrominoGraph)}},"CellList@lits":{sort:function(a){return Array.prototype.sort.call(this,a||function(a,b){return a.id-b.id})},checkCmp:function(){for(var a=0,b=null,c=0;c<this.length;c++)if(1===this[c].qans)if(a++,b){if(b!==this[c].sblk)return!1}else b=this[c].sblk;return 4===a}},"CellList@norinori":{checkCmp:function(){for(var a=0,b=0;b<this.length;b++)1===this[b].qans&&a++;return 2===a}},AreaShadeGraph:{enabled:!0},AreaRoomGraph:{enabled:!0},"AreaTetrominoGraph:AreaShadeGraph@lits":{enabled:!0,relation:{"cell.qans":"node","border.ques":"separator"},setComponentRefs:function(a,b){a.tetro=b},getObjNodeList:function(a){return a.tetronodes},resetObjNodeList:function(a){a.tetronodes=[]},isedgevalidbylinkobj:function(a){return!a.isBorder()},resetExtraData:function(a){a.shape=null},setExtraData:function(a){var b=a.clist=new this.klass.CellList(a.getnodeobjs()),c=b.length,d=null;if(4===c){for(var e=b.sort()[0],f=e.bx,g=e.by,h=0,d=null,i=0;i<c;i++)h+=10*(b[i].by-g>>1)+(b[i].bx-f>>1);switch(h){case 13:case 15:case 27:case 31:case 33:case 49:case 51:d="L";break;case 6:case 60:d="I";break;case 14:case 30:case 39:case 41:d="T";break;case 20:case 24:case 38:case 42:d="S"}}a.shape=d}},Graphic:{autocmp:"room",paint:function(){this.drawBGCells(),"lits"===this.pid&&this.drawShadedCells(),"lits"===this.pid&&this.drawDotCells(!1),this.drawGrid(),"norinori"===this.pid&&this.drawShadedCells(),this.drawBorders(),this.drawChassis(),"norinori"===this.pid&&this.drawBoxBorders(!1)}},"Graphic@lits":{gridcolor_type:"DARK",qanscolor:"black",shadecolor:"rgb(96, 96, 96)",qcmpbgcolor:"rgb(96, 255, 160)",bgcellcolor_func:"qcmp"},"Graphic@norinori":{gridcolor_type:"LIGHT",enablebcolor:!0,bcolor:"rgb(96, 224, 160)",qcmpbgcolor:"rgb(96, 255, 160)",bgcellcolor_func:"qcmp1"},Encode:{decodePzpr:function(a){var b=this.puzzle.pzpr.parser;(a===b.URL_PZPRV3&&this.checkpflag("d")||a===b.URL_PZPRAPP&&!this.checkpflag("c"))&&"norinori"!==this.pid?this.decodeLITS_old():this.decodeBorder()},encodePzpr:function(a){a===this.puzzle.pzpr.parser.URL_PZPRAPP&&"lits"===this.pid&&(this.outpflag="c"),this.encodeBorder()},decodeKanpen:function(){this.fio.decodeAreaRoom()},encodeKanpen:function(){this.fio.encodeAreaRoom()},decodeLITS_old:function(){for(var a=this.outbstr,b=this.board,c=0;c<b.border.length;c++){var d=b.border[c],e=d.sidecell[0],f=d.sidecell[1];e.isnull||f.isnull||a.charAt(e.id)===a.charAt(f.id)||(d.ques=1)}this.outbstr=a.substr(b.cell.length)}},FileIO:{decodeData:function(){this.decodeAreaRoom(),this.decodeCellAns()},encodeData:function(){this.encodeAreaRoom(),this.encodeCellAns()},kanpenOpen:function(){this.decodeAreaRoom(),this.decodeCellAns()},kanpenSave:function(){this.encodeAreaRoom(),this.encodeCellAns()},kanpenOpenXML:function(){this.decodeAreaRoom_XMLBoard(),this.decodeCellAns_XMLAnswer()},kanpenSaveXML:function(){this.encodeAreaRoom_XMLBoard(),this.encodeCellAns_XMLAnswer()}},"AnsCheck@lits#1":{checklist:["check2x2ShadeCell","checkOverShadeCellInArea","checkSeqBlocksInRoom","checkTetromino","checkConnectShade","checkNoShadeCellInArea","checkLessShadeCellInArea"]},"AnsCheck@norinori#1":{checklist:["checkOverShadeCell","checkOverShadeCellInArea","checkSingleShadeCell","checkSingleShadeCellInArea","checkNoShadeCellInArea"]},"AnsCheck@lits":{checkOverShadeCellInArea:function(){this.checkAllBlock(this.board.roommgr,function(a){return a.isShade()},function(a,b,c,d){return c<=4},"bkShadeGt4")},checkLessShadeCellInArea:function(){this.checkAllBlock(this.board.roommgr,function(a){return a.isShade()},function(a,b,c,d){return c>=4},"bkShadeLt4")},checkSeqBlocksInRoom:function(){for(var a=this.board,b=a.roommgr.components,c=0;c<b.length;c++){for(var d=b[c].clist,e=null,f=!0,g=0;g<d.length;g++)if(null===d[g].tetro);else if(d[g].tetro!==e){if(null!==e){f=!1;break}e=d[g].tetro}if(!f){if(this.failcode.add("bkShadeDivide"),this.checkOnly)break;d.seterr(1)}}},checkTetromino:function(){function a(a,b){var c=a.tetro,d=b.tetro;return null!==c&&null!==d&&c!==d&&null!==c.shape&&null!==d.shape&&c.shape===d.shape}for(var b=!0,c=this.board,d=0;d<c.cell.length;d++){var e=c.cell[d],f=e.adjacent.right;if(!f.isnull&&a(e,f)){if(b=!1,this.checkOnly)break;e.tetro.clist.seterr(2),f.tetro.clist.seterr(2)}if(f=e.adjacent.bottom,!f.isnull&&a(e,f)){if(b=!1,this.checkOnly)break;e.tetro.clist.seterr(2),f.tetro.clist.seterr(2)}}b||this.failcode.add("bsSameShape")}},"AnsCheck@norinori":{checkOverShadeCell:function(){this.checkAllArea(this.board.sblkmgr,function(a,b,c,d){return c<=2},"csGt2")},checkSingleShadeCell:function(){this.checkAllArea(this.board.sblkmgr,function(a,b,c,d){return c>=2},"csLt2")},checkOverShadeCellInArea:function(){this.checkAllBlock(this.board.roommgr,function(a){return a.isShade()},function(a,b,c,d){return c<=2},"bkShadeGt2")},checkSingleShadeCellInArea:function(){this.checkAllBlock(this.board.roommgr,function(a){return a.isShade()},function(a,b,c,d){return 1!==c},"bkShadeLt2")}},"FailCode@lits":{bkShadeLt4:["黒マスのカタマリが４マス未満の部屋があります。","A room has three or less shaded cells."],bkShadeGt4:["５マス以上の黒マスがある部屋が存在します。","A room has five or more shaded cells."],bsSameShape:["同じ形のテトロミノが接しています。","Some Tetrominos that are the same shape are Adjacent."]},"FailCode@norinori":{csLt2:["１マスだけの黒マスのカタマリがあります。","There is a single shaded cell."],csGt2:["２マスより大きい黒マスのカタマリがあります。","The size of a mass of shaded cells is over two."],bkShadeLt2:["１マスしか黒マスがない部屋があります。","A room has only one shaded cell."],bkShadeGt2:["２マス以上の黒マスがある部屋が存在します。","A room has three or mode shaded cells."]}});