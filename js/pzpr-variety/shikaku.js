/*! @license pzpr.js v0.11.1 (c) 2009-2019 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */

!function(a,b){"object"==typeof module&&module.exports?module.exports=[a,b]:pzpr.classmgr.makeCustom(a,b)}(["shikaku","aho"],{MouseEvent:{inputModes:{edit:["number","clear"],play:["border","subline"]},mouseinput_auto:function(){this.puzzle.playmode?(this.mousestart||this.mousemove)&&("left"===this.btn&&this.isBorderMode()?this.inputborder():this.inputQsubLine()):this.puzzle.editmode&&this.mousestart&&this.inputqnum()}},KeyEvent:{enablemake:!0},Board:{hasborder:1},AreaRoomGraph:{enabled:!0},Graphic:{hideHatena:!0,gridcolor_type:"DLIGHT",bordercolor_func:"qans",fontShadecolor:"white",numbercolor_func:"fixed_shaded",circleratio:[.4,.4],paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawBorders(),this.drawCircledNumbers(),this.drawBorderQsubs(),this.drawChassis(),this.drawTarget()},circlestrokecolor_func:"null",getCircleFillColor:function(a){return-1!==a.qnum?1===a.error?this.errcolor1:this.quescolor:null}},Encode:{decodePzpr:function(a){this.decodeNumber16()},encodePzpr:function(a){this.encodeNumber16()},decodeKanpen:function(){this.fio.decodeCellQnum_kanpen()},encodeKanpen:function(){this.fio.encodeCellQnum_kanpen()}},FileIO:{decodeData:function(){this.decodeCellQnum(),this.decodeBorderAns()},encodeData:function(){this.encodeCellQnum(),this.encodeBorderAns()},kanpenOpen:function(){this.decodeCellQnum_kanpen(),this.decodeAnsSquareRoom()},kanpenSave:function(){this.encodeCellQnum_kanpen(),this.encodeAnsSquareRoom()},decodeAnsSquareRoom:function(){for(var a,b=this.board,c=[],d=0,e=+this.readLine();d<e&&(a=this.readLine());d++){for(var f=a.split(" "),g=0;g<4;g++)isNaN(f[g])||(f[g]=2*+f[g]+1);b.cellinside(f[1],f[0],f[3],f[2]).each(function(a){c[a.id]=d})}this.rdata2Border(!1,c),b.roommgr.rebuild()},encodeAnsSquareRoom:function(){var a=this.board;a.roommgr.rebuild();var b=a.roommgr.components;this.writeLine(b.length);for(var c=0;c<b.length;c++){var d=b[c].clist.getRectSize();this.writeLine([d.y1>>1,d.x1>>1,d.y2>>1,d.x2>>1,""].join(" "))}},kanpenOpenXML:function(){this.decodeCellQnum_shikaku_XMLBoard(),this.decodeAnsSquareRoom_XMLAnswer()},kanpenSaveXML:function(){this.encodeCellQnum_shikaku_XMLBoard(),this.encodeAnsSquareRoom_XMLAnswer()},decodeCellQnum_shikaku_XMLBoard:function(){this.decodeCellXMLBoard(function(a,b){b>=1?a.qnum=b:-1===b&&(a.qnum=-2)})},encodeCellQnum_shikaku_XMLBoard:function(){this.encodeCellXMLBoard(function(a){var b=0;return a.qnum>=1?b=a.qnum:-2===a.qnum&&(b=-1),b})},decodeAnsSquareRoom_XMLAnswer:function(){for(var a=this.xmldoc.querySelectorAll("answer area"),b=this.board,c=[],d=0;d<a.length;d++)for(var e=a[d],f=2*+e.getAttribute("c0")-1,g=2*+e.getAttribute("r0")-1,h=2*+e.getAttribute("c1")-1,i=2*+e.getAttribute("r1")-1,j=f;j<=h;j+=2)for(var k=g;k<=i;k+=2)c[b.getc(j,k).id]=d;this.rdata2Border(!1,c),b.roommgr.rebuild()},encodeAnsSquareRoom_XMLAnswer:function(){var a=this.xmldoc.querySelector("answer"),b=this.board;b.roommgr.rebuild();for(var c=b.roommgr.components,d=0;d<c.length;d++){var e=c[d].clist.getRectSize();a.appendChild(this.createXMLNode("area",{r0:1+(e.y1>>1),c0:1+(e.x1>>1),r1:1+(e.y2>>1),c1:1+(e.x2>>1)}))}}},AnsCheck:{checklist:["checkNoNumber","checkDoubleNumber","checkRoomRect@shikaku","checkAhoSquare@aho","checkLshapeArea@aho","checkNumberAndSize","checkBorderDeadend+"],checkAhoSquare:function(){this.checkAllArea(this.board.roommgr,function(a,b,c,d){return d<0||d%3==0||a*b===c},"bkNotRect3")},checkLshapeArea:function(){for(var a=this.board.roommgr.components,b=0;b<a.length;b++){var c=a[b],d=c.clist,e=d.getQnumCell();if(!e.isnull){var f=e.qnum;if(!(f<0||f%3!=0)){var g=d.getRectSize(),h=this.board.cellinside(g.x1,g.y1,g.x2,g.y2).filter(function(a){return a.room!==c}),i=h.getRectSize();if(!(h.length>0&&i.cols*i.rows===i.cnt)||g.x1!==i.x1&&g.x2!==i.x2||g.y1!==i.y1&&g.y2!==i.y2){if(this.failcode.add("bkNotLshape3"),this.checkOnly)break;d.seterr(1)}}}}}},FailCode:{bkNoNum:["数字の入っていない領域があります。","An area has no numbers."],bkNumGe2:["1つの領域に2つ以上の数字が入っています。","An area has plural numbers."],bkSizeNe:["数字と領域の大きさが違います。","The size of the area is not equal to the number."],bkNotRect:["四角形ではない領域があります。","An area is not rectangle."],bkNotRect3:["大きさが3の倍数ではないのに四角形ではない領域があります。","An area whose size is not multiples of three is not rectangle."],bkNotLshape3:["大きさが3の倍数である領域がL字型になっていません。","An area whose size is multiples of three is not L-shape."]}});